#include <iostream>
#include <iomanip>
#include <cmath>
using namespace std;

struct Complex{
    double re;
    double im;
};
Complex number(){
    Complex number{};
    cout << "Enter the real and imaginary part of the number" << endl;
    cin >> number.re >> number.im;
    return number;
}
void Print(Complex number){
    if (number.re >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number.re << " ";
    if (number.im >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number.im <<  "i" << endl;
}
void Addition(Complex number, Complex number0){
    cout << "Complex number #1 ? "  << setprecision(0) << number.re << " " << number.im << endl;
    cout << "Complex number #2 ? "  << setprecision(0) << number0.re << " " << number0.im << endl;
    if (number.re >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number.re << " ";
    if (number.im >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number.im <<  "i" << "   +   ";
    if (number0.re >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number0.re << " ";
    if (number0.im >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number0.im <<  "i" << "   =   ";
    if (number.re + number0.re >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number.re + number0.re << " ";
    if (number.im + number0.im >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number.im + number0.im <<  "i" << endl;
}
void Subtraction(Complex number, Complex number0){
    cout << "Complex number #1 ? "  << setprecision(0) << number.re << " " << number.im << endl;
    cout << "Complex number #2 ? "  << setprecision(0) << number0.re << " " << number0.im << endl;
    if (number.re >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number.re << " ";
    if (number.im >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number.im <<  "i" << "   -   ";
    if (number0.re >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number0.re << " ";
    if (number0.im >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number0.im <<  "i" << "   =   ";
    if (number.re - number0.re >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number.re - number0.re << " ";
    if (number.im - number0.im >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number.im - number0.im <<  "i" << endl;
}
void Multiplication(Complex number, Complex number0){
    cout << "Complex number #1 ? "  << setprecision(0) << number.re << " " << number.im << endl;
    cout << "Complex number #2 ? "  << setprecision(0) << number0.re << " " << number0.im << endl;
    if (number.re >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number.re << " ";
    if (number.im >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number.im <<  "i" << "   *   ";
    if (number0.re >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number0.re << " ";
    if (number0.im >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number0.im <<  "i" << "   =   ";
    if ((number.re * number0.re - number.im * number0.im) >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number.re * number0.re - number.im * number0.im << " ";
    if ((number.re * number0.im + number.im * number0.re) >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number.re * number0.im + number.im * number0.re <<  "i" << endl;
}
void Division(Complex number, Complex number0){
    cout << "Complex number #1 ? "  << setprecision(0) << number.re << " " << number.im << endl;
    cout << "Complex number #2 ? "  << setprecision(0) << number0.re << " " << number0.im << endl;
    if (number.re >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number.re << " ";
    if (number.im >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number.im <<  "i" << "   /   ";
    if (number0.re >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number0.re << " ";
    if (number0.im >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3) << number0.im <<  "i" << "   =   ";
    if (((number.re * number0.re + number.im * number0.im) / (pow(number0.re,2) + pow(number0.im,2))) >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3)
         << ((number.re * number0.re + number.im * number0.im) / pow(number0.re,2) + pow(number0.im,2)) <<" ";
    if ((number.im * number0.re + number.re * number0.im) / (pow(number0.re,2) + pow(number0.im,2)) >= 0){
        cout << "+";
    }
    cout << fixed << setprecision(3)
         << (number.im * number0.re + number.re * number0.im) / pow(number0.re,2) + pow(number0.im,2) <<  "i"
         << endl;
}
int main() {

    Complex number1 = number();
    Print(number1);
    Complex number2 = number();
    Print(number2);

    char operation;
    cout << "Operation: ";
    cin >> operation;
    if (operation != '+' && operation != '-' && operation != '*' && operation != '/') {
        cerr << "Illegal Operation. Good bye" << endl;
        return 1;
    }
        switch (operation) {
            case '+':
                Addition(number1, number2);
                break;
            case '-':
                Subtraction(number1, number2);
                break;
            case '*':
                Multiplication(number1, number2);
                break;
            case '/':
                Division(number1, number2);
                break;
            default:
                break;
        }
    return 0;
}
